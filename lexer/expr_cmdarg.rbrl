%%{
#%

machine Lex;

EXPR_CMDARG := |*

  e_arg_sign;

  ws+ '/' %TokEnd ^(space | '=') => StringStart;

  ws+ percent_string - '%=' => StringStart;

  ws+ heredoc_ident => Heredoc;

  ws+ '::' => Keyword;

  ws+ ( '**' | '*' ) %TokEnd ^(space | '=') => Keyword;

  ws+ '&' %TokEnd ^(space | [&.=]) => Keyword;

  # exclude '?\\\n': it resolves to '\n' as if '?\\n'
  '?' %TokEnd space => Keyword;

  ws+ '(' % { token_type = :kLPAREN_ARG } => Keyword;

  ws+ '[' => Keyword;

  '{' % {
    if @lpar_beg > 0 && @lpar_beg == @paren_nest
      @lpar_beg = 0
      @paren_nest -= 1
      token_type = :kLAMBEG
    else
      @in_cmd = true
      token_type = OPERATORS
    end
  } => Keyword;

  label % { token_type = :tLABEL; next_state = EXPR_LABELARG } => Keyword;

  reserved => Keyword;

  any_ident % { next_state = @in_cmd ? EXPR_CMDARG : EXPR_ARG } => Keyword;

  any => { fhold; fcall COMMON_EXPR; };

*|;

}%%
#%